# api [python]
services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    ports:
      - "${APP_PORT}:8000"
    depends_on:
      mongo:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped

  mongo:
    image: mongo:7
    container_name: todo_mongodb
    restart: unless-stopped
    ports:
      - "${DATABASE_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: "${DATABASE_USER}"
      MONGO_INITDB_ROOT_PASSWORD: "${DATABASE_PASSWORD}"
      MONGO_INITDB_DATABASE: "${DATABASE_NAME}"
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    healthcheck:
      test: ["CMD", "mongosh", "--quiet", "--eval", "db.adminCommand('ping')", "--authenticationDatabase", "admin", "-u", "${DATABASE_USER}", "-p", "${DATABASE_PASSWORD}"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: todo_redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT}:6379"
    command: redis-server --requirepass "${REDIS_PASSWORD}" --appendonly yes
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "--no-auth-warning", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mongo-data:
  mongo-config:
  redis-data: 
